Program Laba4_4;
(*Дана матрица X размерности N?M. Из матрицы удалить все строки и столбцы,
  содержащие хотя бы один нулевой элемент. Матрицу уплотнить, сдвинув оставшиеся
  элементы к левому верхнему углу*)

// Консольное приложение
{$APPTYPE CONSOLE}

// Объявление констант
Const
  N=3;
  M=4;
  // N - число строк матрицы
  // M - число столбцов матрицы
 // Объявление типов
Type
  Arr=array [1..N,1..M] of integer;
  // Arr - массив из N строк и M столбцов

// Объявление переменных
Var
  I,K,P,S,CountR,CountC:integer;
  ArrSaved:Arr;
  Columns:array[1..M] of integer;
  Raws:array[1..N] of integer;
  X:Arr=((1,5,6,8),(10,-5,-2,7),(0,1,5,3));
  // I,K - счетчик цикла
  // P - номер столбца, в который будет сдвинут ненулевой элемент матрицы
  // S - номер столбца, в который будет сдвинут ненулевой элемент матрицы
  // CountR - число строк, содержащих нулевые элементы
  // CountC - число столбцов, содержащих нулевые элементы
  // X - исходный массив
  // ArrSaved - копия исходного массива
  // Columns - массив, содержащий число нулей в каждом столбце
  // Raws - массив, содержащий число нулей в каждой строке

  Error:integer;
  Check:string;
  // Error - проверка вводимых данных
  // Check - проверка вводимых данных


begin

  (*Начальное число строк и столбцов с нулевыми элементами*)
  CountR:=0;
  CountC:=0;

  // Задание начальных значений
  P:=1;
  S:=1;

  // Ввод и проверка элементов массива
  for K:=1 to N do
    for I:=1 to M do
    begin

      (*Если элемент матрицы равен 0, наращиваем счетчик нулей в текущих строке
        и столбце*)
      if X[K,I]=0 then
      begin
        Raws[K]:=Raws[K]+1;
        Columns[I]:=Columns[I]+1;
      end;
    end;

  // Сохраняем введенный массив
  ArrSaved:=X;

  writeln;

  // Вывод числа нулевых элементов в строках
  for K:=1 to N do
  begin
    write('Quantity of 0 in ',K,' raw: ');
    writeln(Raws[K]);
  end;

  writeln;

  // Вывод числа нулевых элементов в столбцах
  for I:=1 to M do
  begin
    write('Quantity of 0 in ',I,' column: ');
    writeln(Columns[I]);
  end;

  writeln;

  // Вывод исходной матрицы
  writeln('Matrix that you have entered:');
  for K:=1 to N do
  begin
    for I:=1 to M do
      write(X[K,I]:3,' ');
    writeln;
  end;

  (*Начало цикла А1 по K. K изменяет свое значение от 1 до N с шагом 1. Подсчет
    числа строк, содержащих нулевые элементы*)
  for K:=1 to N do
    if Raws[K]<>0 then
    begin
      CountR:=CountR+1;

      (*Начало цикла А1.1 по I. I изменяет свое значение от 1 до M с шагом 1.
        Удаление элеметов всех строк матрицы, содержащих хотя бы 1 нулевой
        элемент*)
      for I:=1 to M do
        ArrSaved[K,I]:=0;
      // Конец цикла А1.1

    end;
    // Конец цикла А1

  (*Начало цикла А2 по I. I изменяет свое значение от 1 до M с шагом 1. Подсчет
    числа столбцов, содержащих нулевые элементы *)
  for I:=1 to M do
    if Columns[I]<>0 then
    begin
      CountC:=CountC+1;

      (*Начало цикла А2.1 по I. I изменяет свое значение от 1 до M с шагом 1.
        Удаление всех элеметов столбцов матрицы, содержащих хотя бы 1 нулевой
        элемент*)
      for K:=1 to N do
        ArrSaved[K,I]:=0;
      // Конец цикла А2

    end;
    // Конец цикла А2.1

  (*Начало цикла А3 по K. K изменяет свое значение от 1 до N с шагом 1.
    K - число строк матрицы*)
  for K:=1 to N do

    (*Начало цикла А3.1 по I. I изменяет свое значение от 1 до M с шагом 1.
      M - число столбцов матрицы. Уплотнение матрицы путем сдвига оставшихся
      элементов к левому верхнему углу*)
    for I:=1 to M do
      if ArrSaved[K,I]<>0 then
      begin
        ArrSaved[S,P]:=ArrSaved[K,I];
        P:=P+1;
        if P>M-CountC then
        begin
          P:=1;
          S:=S+1;
        end;
      end;
    // Конец цикла А3.1

  // Конец цикла А3

  (*Вывод полученной матрицы. Число строк и столбцов матрицы уменьшается на
    число строк и столбцов, содержащих хотя бы 1 нулевой элемент*)
  writeln;
  writeln('Matrix after all raws and columns with zero elemets were deleted:');
  for K:=1 to N-CountR do
  begin
    for I:=1 to M-CountC do
      write(ArrSaved[K,I]:3,' ');
    writeln;
  end;

  (*Если все элементы матрицы удалены, программа сообщает об этом*)
  if (CountR=N) or (CountC=M) then
    writeln('All elements were deleted');

  readln;
end.

